services:
  # --- Public entrypoint (Nginx) ---
  - type: web
    name: nginx
    env: docker
    rootDir: ./nginx
    dockerfilePath: ./nginx/Dockerfile
    plan: free
    envVars:
      - key: UPSTREAM1
        value: app1:8080
      - key: UPSTREAM2
        value: app2:8080
      - key: UPSTREAM3
        value: app3:8080
    # Nginx must listen on $PORT inside the container (handled in your templated conf)

  # --- Private backend replicas ---
  - type: pserve   # alias: pserv
    name: app1
    env: docker
    rootDir: ./backend
    dockerfilePath: ./backend/Dockerfile
    envVars:
      - key: DATABASE_URL
        value: postgresql://appuser:apppass@db:5432/appdb

  - type: pserve
    name: app2
    env: docker
    rootDir: ./backend
    dockerfilePath: ./backend/Dockerfile
    envVars:
      - key: DATABASE_URL
        value: postgresql://appuser:apppass@db:5432/appdb

  - type: pserve
    name: app3
    env: docker
    rootDir: ./backend
    dockerfilePath: ./backend/Dockerfile
    envVars:
      - key: DATABASE_URL
        value: postgresql://appuser:apppass@db:5432/appdb

  # --- Private Postgres with persistent Disk ---
  - type: pserve
    name: db
    env: docker
    image:
      url: postgres:16-alpine   # <-- object with url (not a bare string)
    envVars:
      - key: POSTGRES_DB
        value: appdb
      - key: POSTGRES_USER
        value: appuser
      - key: POSTGRES_PASSWORD
        value: apppass
    disk:
      name: pgdata
      mountPath: /var/lib/postgresql/data
      sizeGB: 10
